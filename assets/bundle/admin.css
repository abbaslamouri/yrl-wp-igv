@charset "UTF-8";
/*!
 * Accordion v3.1.1
 * Simple accordion created in pure Javascript.
 * https://github.com/michu2k/Accordion
 *
 * Copyright (c) MichaÅ‚ Strumpf
 * Published under MIT License
 */
.ac{margin-top:10px;border:1px solid #eee;background-color:#fff;box-sizing:border-box}.ac .ac-header{margin:0;padding:0}.ac .ac-trigger{font:bold 16px Arial,sans-serif;color:#111;text-align:left;width:100%;padding:10px 30px 10px 10px;display:block;cursor:pointer;background-color:transparent;-webkit-transition:color .25s ease;transition:color .25s ease;position:relative;text-decoration:none;margin:0;border:0}.ac .ac-trigger::after{content:'+';text-align:center;width:15px;-webkit-transform:translate(0,-50%);transform:translate(0,-50%);position:absolute;right:10px;top:50%}.ac .ac-trigger:focus{color:#8a8a8a}.ac .ac-panel{overflow:hidden;-webkit-transition-property:height,visibility;transition-property:height,visibility;-webkit-transition-timing-function:ease;transition-timing-function:ease}.ac .ac-panel .ac-text{font:15px/24px Arial,sans-serif;color:#111;padding:10px;margin:0}.ac.js-enabled .ac-panel{visibility:hidden}.ac.is-active .ac-panel{visibility:visible}.ac.is-active>.ac-header .ac-trigger::after{content:'\2013'}
.yrl_wp_igv__admin, .yrl_wp_igv__public {
  font-size: 62.5%;
  box-sizing: border-box; }
  .yrl_wp_igv__admin *,
  .yrl_wp_igv__admin *::before,
  .yrl_wp_igv__admin *::after, .yrl_wp_igv__public *,
  .yrl_wp_igv__public *::before,
  .yrl_wp_igv__public *::after {
    margin: 0px;
    padding: 0px;
    box-sizing: inherit; }
  .yrl_wp_igv__admin input,
  .yrl_wp_igv__admin select, .yrl_wp_igv__public input,
  .yrl_wp_igv__public select {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    padding: 0.3rem 0.2rem;
    border-radius: 3px; }
    .yrl_wp_igv__admin input:focus,
    .yrl_wp_igv__admin select:focus, .yrl_wp_igv__public input:focus,
    .yrl_wp_igv__public select:focus {
      outline: none;
      border: none; }

.yrl_wp_igv__admin, .yrl_wp_igv__public {
  /*************************************************
  ***************************BUTTONS****************
  **************************************************/
  /*************************************************
  ********************MAIN ACCORDION****************
  **************************************************/
  /*************************************************
  ************************FORM GROUP****************
  **************************************************/ }
  .yrl_wp_igv__admin .btn, .yrl_wp_igv__public .btn {
    background-color: #263238 !important;
    color: #e2f1f8 !important; }
  .yrl_wp_igv__admin .accordion-1 .ac-trigger, .yrl_wp_igv__public .accordion-1 .ac-trigger {
    color: #000a12;
    background-color: #b0bec5;
    font-size: 0.8rem; }
    .yrl_wp_igv__admin .accordion-1 .ac-trigger:focus, .yrl_wp_igv__public .accordion-1 .ac-trigger:focus {
      color: #000a12; }
  .yrl_wp_igv__admin .accordion-1 .ac.is-active .ac-trigger, .yrl_wp_igv__public .accordion-1 .ac.is-active .ac-trigger {
    background-color: rgba(176, 190, 197, 0.5); }
  .yrl_wp_igv__admin .accordion-1 .ac-panel, .yrl_wp_igv__public .accordion-1 .ac-panel {
    background-color: rgba(176, 190, 197, 0.6);
    padding: 0.5rem; }
    .yrl_wp_igv__admin .accordion-1 .ac-panel .intro, .yrl_wp_igv__public .accordion-1 .ac-panel .intro {
      font-size: .7rem;
      margin: .5rem 0;
      padding: 0;
      line-height: 1.4; }
  .yrl_wp_igv__admin .form-group__input, .yrl_wp_igv__public .form-group__input {
    font-size: .7rem;
    font-family: inherit;
    color: inherit;
    padding: .3rem 1.5rem;
    border-radius: 2px;
    background-color: #eeeeee;
    border: none;
    border-bottom: 3px solid transparent;
    display: block;
    width: 100%; }
    .yrl_wp_igv__admin .form-group__input:focus, .yrl_wp_igv__public .form-group__input:focus {
      outline: none;
      box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.2);
      border-bottom: 3px solid #1b5e20; }
      .yrl_wp_igv__admin .form-group__input:focus:invalid, .yrl_wp_igv__public .form-group__input:focus:invalid {
        border-bottom: 3px solid #dd2c00; }
      .yrl_wp_igv__admin .form-group__input:focus::-webkit-input-placeholder, .yrl_wp_igv__public .form-group__input:focus::-webkit-input-placeholder {
        color: #666; }
  .yrl_wp_igv__admin .form-group__input:placeholder-shown + .form-group__label, .yrl_wp_igv__public .form-group__input:placeholder-shown + .form-group__label {
    opacity: 0;
    visibility: hidden;
    transform: translate(0, -1.95rem); }
  .yrl_wp_igv__admin .form-group__label, .yrl_wp_igv__public .form-group__label {
    font-size: .7rem;
    font-weight: 500;
    margin-top: .2rem;
    margin-left: 1.45rem;
    display: block;
    transition: all .9s; }

.yrl_wp_igv__admin {
  margin: 1rem 2rem 1rem 0;
  padding: 2rem; }
  .yrl_wp_igv__admin .edit-chart {
    position: fixed;
    height: 80vh;
    width: 85%;
    display: grid;
    grid-template-columns: 1fr minmax(350px, 25%);
    grid-gap: 2rem;
    border: 1px solid grey; }
    .yrl_wp_igv__admin .edit-chart .chart-options {
      overflow-y: scroll;
      border: 1px solid grey; }
      .yrl_wp_igv__admin .edit-chart .chart-options .field-group {
        display: grid;
        grid-template-rows: auto;
        column-gap: 1.5em; }
        .yrl_wp_igv__admin .edit-chart .chart-options .field-group:not(:last-child) {
          margin-bottom: 1rem; }
        .yrl_wp_igv__admin .edit-chart .chart-options .field-group.hundred-zero {
          grid-template-columns: 1fr; }
          .yrl_wp_igv__admin .edit-chart .chart-options .field-group.hundred-zero .form-group {
            grid-column: 1 / 3; }
        .yrl_wp_igv__admin .edit-chart .chart-options .field-group.fifty-fifty {
          grid-template-columns: 1fr 1fr; }
          .yrl_wp_igv__admin .edit-chart .chart-options .field-group.fifty-fifty .form-group:first-child {
            grid-column: 1 / 2; }
          .yrl_wp_igv__admin .edit-chart .chart-options .field-group.fifty-fifty .form-group:nth-child(2) {
            grid-column: 2 / 3; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/